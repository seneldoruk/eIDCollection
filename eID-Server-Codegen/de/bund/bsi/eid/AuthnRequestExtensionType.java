//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package de.bund.bsi.eid;

import java.math.BigInteger;
import java.util.HashMap;
import java.util.Map;
import javax.xml.namespace.QName;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAnyAttribute;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlSchemaType;
import jakarta.xml.bind.annotation.XmlType;


/**
 * <p>Java class for AuthnRequestExtensionType complex type</p>.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 * 
 * <pre>{@code
 * <complexType name="AuthnRequestExtensionType">
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence>
 *         <element name="RequestedAttributes" type="{http://bsi.bund.de/eID/}RequestedAttributesType"/>
 *       </sequence>
 *       <attribute name="Version" use="required" type="{http://www.w3.org/2001/XMLSchema}positiveInteger" />
 *       <anyAttribute processContents='lax'/>
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "AuthnRequestExtensionType", propOrder = {
    "requestedAttributes"
})
public class AuthnRequestExtensionType {

    @XmlElement(name = "RequestedAttributes", required = true)
    protected RequestedAttributesType requestedAttributes;
    @XmlAttribute(name = "Version", required = true)
    @XmlSchemaType(name = "positiveInteger")
    protected BigInteger version;
    @XmlAnyAttribute
    private Map<QName, String> otherAttributes = new HashMap<>();

    /**
     * Gets the value of the requestedAttributes property.
     * 
     * @return
     *     possible object is
     *     {@link RequestedAttributesType }
     *     
     */
    public RequestedAttributesType getRequestedAttributes() {
        return requestedAttributes;
    }

    /**
     * Sets the value of the requestedAttributes property.
     * 
     * @param value
     *     allowed object is
     *     {@link RequestedAttributesType }
     *     
     */
    public void setRequestedAttributes(RequestedAttributesType value) {
        this.requestedAttributes = value;
    }

    /**
     * Gets the value of the version property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getVersion() {
        return version;
    }

    /**
     * Sets the value of the version property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setVersion(BigInteger value) {
        this.version = value;
    }

    /**
     * Gets a map that contains attributes that aren't bound to any typed property on this class.
     * 
     * <p>
     * the map is keyed by the name of the attribute and 
     * the value is the string value of the attribute.
     * 
     * the map returned by this method is live, and you can add new attribute
     * by updating the map directly. Because of this design, there's no setter.
     * 
     * 
     * @return
     *     always non-null
     */
    public Map<QName, String> getOtherAttributes() {
        return otherAttributes;
    }

}
